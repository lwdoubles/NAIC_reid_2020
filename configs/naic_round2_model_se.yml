MODEL:
  # PRETRAIN_CHOICE: 'imagenet'
  PRETRAIN_CHOICE: 'finetune'
  PRETRAIN_PATH: '/home/lwlw/reid/NAIC_Person_ReID_DMT/contest_se/se_resnet101_ibn_a_70.pth'
  METRIC_LOSS_TYPE: 'triplet_center'
  IF_LABELSMOOTH: 'on'
  IF_WITH_CENTER: 'yes'
  NAME: 'se_resnet101_ibn_a'
  # DEVICE_ID: ('4,5,6,7')
  DEVICE_ID: ('0')
  ID_LOSS_TYPE: 'arcface'
  ID_LOSS_WEIGHT: 0.1
  TRIPLET_LOSS_WEIGHT: 0.9
  WEIGHTED_TRIPLET: True
  NO_MARGIN: True
  THRESH: 0.45
INPUT:
  # SIZE_TRAIN: [384, 192]
  # SIZE_TEST: [384, 192]

  #考虑大一点的分辨率，比如尝试[256*sqrt(2),128*sqrt(2)]

  SIZE_TRAIN: [350, 175]
  SIZE_TEST: [350, 175]
  PROB: 0.5 # random horizontal flip
  RE_PROB: 0.5 # random erasing #据说去掉随机擦除会好些，不知真假
  PADDING: 10
  # RANDOM_PATCH_PROB: 0.3

DATASETS:
  # NAMES: ('naic')
  # ROOT_DIR: ('../data')
  NAMES: ('contest')
  ROOT_DIR: ('../contest')
  HARD_AUG: True

DATALOADER:
  SAMPLER: 'softmax_triplet'
  NUM_INSTANCE: 6
  NUM_WORKERS: 8

SOLVER:
  OPTIMIZER_NAME: 'Ranger'
  MAX_EPOCHS: 150
    # BASE_LR: 0.006
  BASE_LR: 0.008
  IMS_PER_BATCH: 192
  STEPS: [60, 120]
  GAMMA: 0.1
  WARMUP_FACTOR: 0.01
  WARMUP_EPOCHS: 10
  WARMUP_METHOD: 'linear'
  LARGE_FC_LR: False
  CHECKPOINT_PERIOD: 1
  LOG_PERIOD: 50
  EVAL_PERIOD: 10000
  COSINE_MARGIN: 0.4
  COSINE_SCALE: 30
  CENTER_LOSS_WEIGHT: 0.0003
  # MARGIN: 0.3 #这东西也可以调，可以控制正负样本的距离
  FP16: False

TEST:
  IMS_PER_BATCH: 192
  # RE_RANKING: False
  RE_RANKING: True
  WEIGHT: '/home/lwlw/reid/NAIC_Person_ReID_DMT/contest_se/se_resnet101_ibn_a_70.pth'
  NECK_FEAT: 'before'
  FEAT_NORM: 'yes'
  FLIP_FEATS: 'on'
OUTPUT_DIR: "./contest_se"


